# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  docker_user:
    runs-on: ubuntu-latest
    outputs:
      uid: ${{ steps.uid.outputs.UID }}
      gid: ${{ steps.gid.outputs.GID }}
    steps:
      - id: uid
        run: echo "UID=$(id -u)" >> $GITHUB_OUTPUT
      - id: gid
        run: echo "GID=$(cat /etc/group | grep docker | cut -d':' -f3)" >> $GITHUB_OUTPUT

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [docker_user]
    container:
      image: ubuntu:latest
      options: >-
        --user ${{ needs.docker_user.outputs.uid }}:${{ needs.docker_user.outputs.gid }}
        -v /usr/bin/docker:/usr/bin/docker

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - run: cat /etc/debian_version

      - name: docker test
        run: |
          /usr/bin/docker run --name test --network ${{ job.container.network }} \
              --user ${{ needs.docker_user.outputs.uid }}:${{ needs.docker_user.outputs.gid }} \
              -v ${{ github.workspace }}:/var/lib/test123 \
              -i --rm alpine:3.14 \
              ls -al /var/lib/test123
